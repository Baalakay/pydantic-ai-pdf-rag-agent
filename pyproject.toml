[project]
name = "hsi-pdf-agent"
version = "0.1.0"
description = "AI-powered PDF analysis agent for HSI products"
authors = [
    {name = "Blake McDonald", email = "BlakeTMcDonald@gmail.com"}
]
requires-python = ">=3.12"
readme = "README.md"
dependencies = [
    # FastAPI Framework and Dependencies
    "fastapi>=0.109.0",
    "uvicorn>=0.27.0",
    "pydantic>=2.6.0",
    "pydantic-settings>=2.1.0",
    "python-multipart>=0.0.6",
    "python-jose[cryptography]>=3.3.0",
    "python-dotenv>=1.0.0",
    "PyJWT>=2.8.0",
    # AI and Logging
    "openai",
    "logfire>=0.8.0",
    "tiktoken",
    # HTTP and Data Processing
    "httpx",
    "numpy",
    "pandas",
    # PDF Processing
    "PyMuPDF",
    "pdfplumber",
    "argon2-cffi>=23.0.0",
    "anthropic>=0.45.2",
    "plotly",
    "seaborn",
    "ipywidgets>=8.1.1",
    "jupyter",
    "jupyterlab>=4.0.0",
    "rich",
    "widgetsnbextension>=4.0.9",
    "jupyter-core>=5.0.0",
    "ollama>=0.4.7",
    "langchain-community>=0.3.16",
    "langchain-ollama>=0.2.3",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.rye]
managed = true
dev-dependencies = [
    "pytest>=7.4.4",
    "pytest-asyncio>=0.23.3",
    "pytest-cov>=4.1.0",
    "mypy>=1.8.0",
    "ruff>=0.2.0",
    "types-python-jose>=3.3.4",
    "types-python-dateutil>=2.8.19",
]

[tool.rye.scripts]
dev = "uvicorn hsi_pdf_agent.main:app --reload --host 0.0.0.0 --port 8000"
test = "pytest"
lint = "ruff check ."
format = "ruff format ."
fix = "ruff check --fix ."
typecheck = "mypy src"

[tool.ruff]
src = ["src"]
target-version = "py312"
line-length = 100
# Never enforce `E501` (line length violations)
ignore = ["E501"]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "D",  # pydocstyle
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.ruff.lint]
# Enable docstring checking
select = ["D"]
ignore = ["D100", "D104"]
# Ignore missing docstrings in public modules and packages
extend-ignore = ["D100", "D104"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.per-file-ignores]
"tests/*" = ["D"]  # Ignore docstring rules in tests

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --cov"
testpaths = ["src/tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
plugins = ["pydantic.mypy"] 
